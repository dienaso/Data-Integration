<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/jdbc  http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">

	<security:http pattern="/login*" security="none" />
	<security:http pattern="/common/**" security="none" />
	<security:http pattern="/favicon.ico" security="none" />
	
	<security:http auto-config="true" disable-url-rewriting="false">
	
		<security:headers disabled="false"/>
		<security:csrf disabled="true"/>
		<security:intercept-url pattern="/**" access="hasAnyRole('USER,ADMIN')"/>
		<security:form-login login-page="/login"
					username-parameter="j_username" 
					password-parameter="j_password" 
					login-processing-url="/j_spring_security_check" 
					authentication-failure-url="/login?login_error=1" 
		/>
		<security:logout logout-url="/j_spring_security_logout"/>
		<security:session-management>
			<security:concurrency-control max-sessions="10" />
		</security:session-management>
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider ref="authenticationProvider" />
	</security:authentication-manager>
	<bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="hideUserNotFoundExceptions" value="false" />
		<property name="messageSource" ref="messageSource" />
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="passwordEncoder" ref="passwordEncode" />
		<property name="saltSource" ref="saltSource" />
	</bean>
	<!--国际化-->
	<bean id="messageSource"
    	class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:/messages/messages_zh_CN" />
	</bean>
	<bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource" ref="dataSource"/>
		<property name="enableGroups" value="true" />
	</bean>
	<!-- 配置密码加密 -->
	<bean id="passwordEncode" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	<bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<property name="userPropertyToUse" value="username"/>
	</bean>
	
	<!-- ************************************************** -->
	<!-- Method Authorization                               -->
	<!-- ************************************************** -->
	
	<bean class="org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor" id="methodSecurityInterceptor">
		<property name="accessDecisionManager" ref="methodAccessDecisionManager"/>
		<property name="authenticationManager" ref="customAuthenticationManager"/>
		<property name="securityMetadataSource" ref="delegatingMetadataSource"/>
		<property name="afterInvocationManager" ref="afterInvocationManager"/>		
	</bean>
	
	<bean class="org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor" id="methodSecurityMetadataSourceAdvisor">
		<constructor-arg value="methodSecurityInterceptor"/>
		<constructor-arg ref="delegatingMetadataSource"/>
	</bean>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" id="defaultAdvisorAutoProxyCreator">
		<property name="beanName" value="methodSecurityMetadataSourceAdvisor"/>
	</bean>
	
	
	<bean class="org.springframework.security.access.intercept.AfterInvocationProviderManager" id="afterInvocationManager">
		<property name="providers">
			<list>
				<ref bean="postAdviceProvider"/>
			</list>
		</property>
	</bean>
			
	<bean class="org.springframework.security.access.vote.AffirmativeBased" id="methodAccessDecisionManager">
		<property name="decisionVoters">
			<list>
				<ref bean="preAdviceVoter"/>
				<ref bean="roleVoter"/>
				<ref bean="authenticatedVoter"/>
				<ref bean="jsr250Voter"/> <!-- For JSR 250 Method Annotations -->
			</list>
		</property>
	</bean>	
	
	<!-- Overall Delegating Metadata Source -->
	<bean class="org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource" id="delegatingMetadataSource">
		<property name="methodSecurityMetadataSources">
			<list>
				<ref bean="prePostMetadataSource"/>
				<ref bean="securedMetadataSource"/>
				<ref bean="jsr250MetadataSource"/>
			</list>
		</property>
	</bean>	
	
	<!-- JSR 250 Method Voters -->
	<bean class="org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource" id="jsr250MetadataSource"/>
	<bean class="org.springframework.security.access.annotation.Jsr250Voter" id="jsr250Voter"/>
	
	<!-- Spring @Secured Beans -->
	<bean class="org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource" id="securedMetadataSource"/>
	
	<!-- @Pre/@Post Method Advice Voters -->
	<bean class="org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter" id="preAdviceVoter">
		<constructor-arg ref="exprPreInvocationAdvice"/>
	</bean>
	<bean class="org.springframework.security.access.prepost.PostInvocationAdviceProvider" id="postAdviceProvider">
		<constructor-arg ref="exprPostInvocationAdvice"/>
	</bean>
	<bean class="org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource" id="prePostMetadataSource">
		<constructor-arg ref="exprAnnotationAttrFactory"/>
	</bean>
	
	<!-- @Pre/@Post Method Expression Handler -->
	<bean class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler" id="methodExprHandler"/>
	<bean class="org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice" id="exprPreInvocationAdvice">
		<property name="expressionHandler" ref="methodExprHandler"/>
	</bean>
	<bean class="org.springframework.security.access.expression.method.ExpressionBasedPostInvocationAdvice" id="exprPostInvocationAdvice">
		<constructor-arg ref="methodExprHandler"/>
	</bean>
	<bean class="org.springframework.security.access.expression.method.ExpressionBasedAnnotationAttributeFactory" id="exprAnnotationAttrFactory">
		<constructor-arg ref="methodExprHandler"/>
	</bean>
	
</beans>